                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module input
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _update_input_state
                                     12 	.globl _was_input_depressed
                                     13 	.globl _was_input_released
                                     14 	.globl _is_input_held
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area _DATA
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _INITIALIZED
                                     26 ;--------------------------------------------------------
                                     27 ; absolute external ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area _DABS (ABS)
                                     30 ;--------------------------------------------------------
                                     31 ; global & static initialisations
                                     32 ;--------------------------------------------------------
                                     33 	.area _HOME
                                     34 	.area _GSINIT
                                     35 	.area _GSFINAL
                                     36 	.area _GSINIT
                                     37 ;--------------------------------------------------------
                                     38 ; Home
                                     39 ;--------------------------------------------------------
                                     40 	.area _HOME
                                     41 	.area _HOME
                                     42 ;--------------------------------------------------------
                                     43 ; code
                                     44 ;--------------------------------------------------------
                                     45 	.area _CODE
                                     46 ;input.c:6: void update_input_state(struct input_state* is, uint8_t button_state)
                                     47 ;	---------------------------------
                                     48 ; Function update_input_state
                                     49 ; ---------------------------------
      000000                         50 _update_input_state::
      000000 E8 FB                   51 	add	sp, #-5
                                     52 ;input.c:9: is->previous_state = is->current_state;
      000002 F8 07                   53 	ldhl	sp,	#7
      000004 7E                      54 	ld	a, (hl)
      000005 F8 00                   55 	ldhl	sp,	#0
      000007 77                      56 	ld	(hl), a
      000008 F8 08                   57 	ldhl	sp,	#8
      00000A 7E                      58 	ld	a, (hl)
      00000B F8 01                   59 	ldhl	sp,	#1
      00000D 22                      60 	ld	(hl+), a
      00000E C1                      61 	pop	bc
      00000F C5                      62 	push	bc
      000010 03                      63 	inc	bc
      000011 0A                      64 	ld	a, (bc)
      000012 77                      65 	ld	(hl), a
      000013 D1                      66 	pop	de
      000014 D5                      67 	push	de
      000015 7E                      68 	ld	a, (hl)
      000016 12                      69 	ld	(de), a
                                     70 ;input.c:12: is->current_state = ((button_state & J_A) == J_A) << btn_a;
      000017 F8 09                   71 	ldhl	sp,	#9
      000019 7E                      72 	ld	a, (hl)
      00001A F8 03                   73 	ldhl	sp,	#3
      00001C 22                      74 	ld	(hl+), a
      00001D AF                      75 	xor	a, a
      00001E 32                      76 	ld	(hl-), a
      00001F 7E                      77 	ld	a, (hl)
      000020 E6 10                   78 	and	a, #0x10
      000022 5F                      79 	ld	e, a
      000023 16 00                   80 	ld	d, #0x00
      000025 7B                      81 	ld	a, e
      000026 D6 10                   82 	sub	a, #0x10
      000028 B2                      83 	or	a, d
      000029 3E 01                   84 	ld	a, #0x01
      00002B 28 01                   85 	jr	Z, 00104$
      00002D AF                      86 	xor	a, a
      00002E                         87 00104$:
                                     88 ;input.c:13: is->current_state |= ((button_state & J_B) == J_B) << btn_b;
      00002E 02                      89 	ld	(bc), a
      00002F 5F                      90 	ld	e, a
      000030 F8 03                   91 	ldhl	sp,	#3
      000032 7E                      92 	ld	a, (hl)
      000033 E6 20                   93 	and	a, #0x20
                                     94 ;	spillPairReg hl
                                     95 ;	spillPairReg hl
      000035 2E 00                   96 	ld	l, #0x00
      000037 D6 20                   97 	sub	a, #0x20
      000039 B5                      98 	or	a, l
      00003A 3E 01                   99 	ld	a, #0x01
      00003C 28 01                  100 	jr	Z, 00106$
      00003E AF                     101 	xor	a, a
      00003F                        102 00106$:
      00003F 87                     103 	add	a, a
      000040 B3                     104 	or	a, e
      000041 5F                     105 	ld	e, a
      000042 02                     106 	ld	(bc), a
                                    107 ;input.c:14: is->current_state |= ((button_state & J_UP) == J_UP) << btn_up;
      000043 F8 03                  108 	ldhl	sp,	#3
      000045 7E                     109 	ld	a, (hl)
      000046 E6 04                  110 	and	a, #0x04
                                    111 ;	spillPairReg hl
                                    112 ;	spillPairReg hl
      000048 2E 00                  113 	ld	l, #0x00
      00004A D6 04                  114 	sub	a, #0x04
      00004C B5                     115 	or	a, l
      00004D 3E 01                  116 	ld	a, #0x01
      00004F 28 01                  117 	jr	Z, 00108$
      000051 AF                     118 	xor	a, a
      000052                        119 00108$:
      000052 87                     120 	add	a, a
      000053 87                     121 	add	a, a
      000054 B3                     122 	or	a, e
      000055 5F                     123 	ld	e, a
      000056 02                     124 	ld	(bc), a
                                    125 ;input.c:15: is->current_state |= ((button_state & J_DOWN) == J_DOWN) << btn_down;
      000057 F8 03                  126 	ldhl	sp,	#3
      000059 7E                     127 	ld	a, (hl)
      00005A E6 08                  128 	and	a, #0x08
                                    129 ;	spillPairReg hl
                                    130 ;	spillPairReg hl
      00005C 2E 00                  131 	ld	l, #0x00
      00005E D6 08                  132 	sub	a, #0x08
      000060 B5                     133 	or	a, l
      000061 3E 01                  134 	ld	a, #0x01
      000063 28 01                  135 	jr	Z, 00110$
      000065 AF                     136 	xor	a, a
      000066                        137 00110$:
      000066 87                     138 	add	a, a
      000067 87                     139 	add	a, a
      000068 87                     140 	add	a, a
      000069 B3                     141 	or	a, e
      00006A 5F                     142 	ld	e, a
      00006B 02                     143 	ld	(bc), a
                                    144 ;input.c:16: is->current_state |= ((button_state & J_LEFT) == J_LEFT) << btn_left;
      00006C F8 03                  145 	ldhl	sp,	#3
      00006E 7E                     146 	ld	a, (hl)
      00006F E6 02                  147 	and	a, #0x02
                                    148 ;	spillPairReg hl
                                    149 ;	spillPairReg hl
      000071 2E 00                  150 	ld	l, #0x00
      000073 D6 02                  151 	sub	a, #0x02
      000075 B5                     152 	or	a, l
      000076 3E 01                  153 	ld	a, #0x01
      000078 28 01                  154 	jr	Z, 00112$
      00007A AF                     155 	xor	a, a
      00007B                        156 00112$:
      00007B CB 37                  157 	swap	a
      00007D E6 F0                  158 	and	a, #0xf0
      00007F B3                     159 	or	a, e
      000080 5F                     160 	ld	e, a
      000081 02                     161 	ld	(bc), a
                                    162 ;input.c:17: is->current_state |= ((button_state & J_RIGHT) == J_RIGHT) << btn_right;
      000082 F8 03                  163 	ldhl	sp,	#3
      000084 7E                     164 	ld	a, (hl)
      000085 E6 01                  165 	and	a, #0x01
                                    166 ;	spillPairReg hl
                                    167 ;	spillPairReg hl
      000087 2E 00                  168 	ld	l, #0x00
      000089 3D                     169 	dec	a
      00008A B5                     170 	or	a, l
      00008B 3E 01                  171 	ld	a, #0x01
      00008D 28 01                  172 	jr	Z, 00114$
      00008F AF                     173 	xor	a, a
      000090                        174 00114$:
      000090 CB 37                  175 	swap	a
      000092 07                     176 	rlca
      000093 E6 E0                  177 	and	a, #0xe0
      000095 B3                     178 	or	a, e
      000096 5F                     179 	ld	e, a
      000097 02                     180 	ld	(bc), a
                                    181 ;input.c:18: is->current_state |= ((button_state & J_START) == J_START) << btn_start;
      000098 F8 03                  182 	ldhl	sp,	#3
      00009A 7E                     183 	ld	a, (hl)
      00009B E6 80                  184 	and	a, #0x80
                                    185 ;	spillPairReg hl
                                    186 ;	spillPairReg hl
      00009D 2E 00                  187 	ld	l, #0x00
      00009F D6 80                  188 	sub	a, #0x80
      0000A1 B5                     189 	or	a, l
      0000A2 3E 01                  190 	ld	a, #0x01
      0000A4 28 01                  191 	jr	Z, 00116$
      0000A6 AF                     192 	xor	a, a
      0000A7                        193 00116$:
      0000A7 0F                     194 	rrca
      0000A8 0F                     195 	rrca
      0000A9 E6 C0                  196 	and	a, #0xc0
      0000AB B3                     197 	or	a, e
      0000AC 5F                     198 	ld	e, a
      0000AD 02                     199 	ld	(bc), a
                                    200 ;input.c:19: is->current_state |= ((button_state & J_SELECT) == J_SELECT) << btn_select;
      0000AE F8 03                  201 	ldhl	sp,	#3
      0000B0 7E                     202 	ld	a, (hl)
      0000B1 E6 40                  203 	and	a, #0x40
                                    204 ;	spillPairReg hl
                                    205 ;	spillPairReg hl
      0000B3 2E 00                  206 	ld	l, #0x00
      0000B5 D6 40                  207 	sub	a, #0x40
      0000B7 B5                     208 	or	a, l
      0000B8 3E 01                  209 	ld	a, #0x01
      0000BA 28 01                  210 	jr	Z, 00118$
      0000BC AF                     211 	xor	a, a
      0000BD                        212 00118$:
      0000BD 0F                     213 	rrca
      0000BE E6 80                  214 	and	a, #0x80
      0000C0 B3                     215 	or	a, e
      0000C1 57                     216 	ld	d, a
      0000C2 02                     217 	ld	(bc), a
                                    218 ;input.c:22: is->held_buttons = is->previous_state & is->current_state;
      0000C3 C1                     219 	pop	bc
      0000C4 C5                     220 	push	bc
      0000C5 03                     221 	inc	bc
      0000C6 03                     222 	inc	bc
      0000C7 F8 02                  223 	ldhl	sp,	#2
                                    224 ;input.c:25: is->depressed_buttons = (is->current_state ^ is->held_buttons);
                                    225 ;input.c:28: is->released_buttons = (is->previous_state ^ is->held_buttons);
      0000C9 3A                     226 	ld	a, (hl-)
      0000CA 2B                     227 	dec	hl
      0000CB A2                     228 	and	a, d
      0000CC 5F                     229 	ld	e, a
      0000CD 02                     230 	ld	(bc), a
      0000CE C1                     231 	pop	bc
      0000CF C5                     232 	push	bc
      0000D0 03                     233 	inc	bc
      0000D1 03                     234 	inc	bc
      0000D2 03                     235 	inc	bc
      0000D3 7A                     236 	ld	a, d
      0000D4 AB                     237 	xor	a, e
      0000D5 02                     238 	ld	(bc), a
      0000D6 D5                     239 	push	de
      0000D7 2A                     240 	ld	a, (hl+)
      0000D8 5F                     241 	ld	e, a
      0000D9 56                     242 	ld	d, (hl)
      0000DA 21 04 00               243 	ld	hl, #0x0004
      0000DD 19                     244 	add	hl, de
      0000DE D1                     245 	pop	de
      0000DF 4D                     246 	ld	c, l
      0000E0 44                     247 	ld	b, h
      0000E1 F8 02                  248 	ldhl	sp,	#2
      0000E3 7E                     249 	ld	a, (hl)
      0000E4 AB                     250 	xor	a, e
      0000E5 02                     251 	ld	(bc), a
                                    252 ;input.c:29: }
      0000E6 E8 05                  253 	add	sp, #5
      0000E8 C9                     254 	ret
                                    255 ;input.c:33: uint8_t was_input_depressed(struct input_state* is, uint8_t button)
                                    256 ;	---------------------------------
                                    257 ; Function was_input_depressed
                                    258 ; ---------------------------------
      0000E9                        259 _was_input_depressed::
                                    260 ;input.c:35: return (is->depressed_buttons & (1 << button)) != 0x00;
      0000E9 F8 02                  261 	ldhl	sp,	#2
      0000EB 2A                     262 	ld	a, (hl+)
      0000EC 4F                     263 	ld	c, a
      0000ED 2A                     264 	ld	a, (hl+)
      0000EE 47                     265 	ld	b, a
      0000EF 03                     266 	inc	bc
      0000F0 03                     267 	inc	bc
      0000F1 03                     268 	inc	bc
      0000F2 0A                     269 	ld	a, (bc)
      0000F3 4E                     270 	ld	c, (hl)
      0000F4 21 01 00               271 	ld	hl, #0x0001
      0000F7 0C                     272 	inc	c
      0000F8 18 01                  273 	jr	00104$
      0000FA                        274 00103$:
      0000FA 29                     275 	add	hl, hl
      0000FB                        276 00104$:
      0000FB 0D                     277 	dec	c
      0000FC 20 FC                  278 	jr	NZ,00103$
      0000FE 0E 00                  279 	ld	c, #0x00
      000100 A5                     280 	and	a, l
      000101 5F                     281 	ld	e, a
      000102 79                     282 	ld	a, c
      000103 A4                     283 	and	a, h
      000104 B3                     284 	or	a, e
      000105 D6 01                  285 	sub	a,#0x01
      000107 3E 00                  286 	ld	a, #0x00
      000109 17                     287 	rla
      00010A EE 01                  288 	xor	a, #0x01
      00010C 5F                     289 	ld	e, a
                                    290 ;input.c:36: }
      00010D C9                     291 	ret
                                    292 ;input.c:38: uint8_t was_input_released(struct input_state* is, uint8_t button)
                                    293 ;	---------------------------------
                                    294 ; Function was_input_released
                                    295 ; ---------------------------------
      00010E                        296 _was_input_released::
                                    297 ;input.c:40: return (is->released_buttons & (1 << button)) != 0x00;
      00010E F8 02                  298 	ldhl	sp,	#2
      000110 2A                     299 	ld	a, (hl+)
      000111 4F                     300 	ld	c, a
      000112 2A                     301 	ld	a, (hl+)
      000113 47                     302 	ld	b, a
      000114 03                     303 	inc	bc
      000115 03                     304 	inc	bc
      000116 03                     305 	inc	bc
      000117 03                     306 	inc	bc
      000118 0A                     307 	ld	a, (bc)
      000119 4E                     308 	ld	c, (hl)
      00011A 21 01 00               309 	ld	hl, #0x0001
      00011D 0C                     310 	inc	c
      00011E 18 01                  311 	jr	00104$
      000120                        312 00103$:
      000120 29                     313 	add	hl, hl
      000121                        314 00104$:
      000121 0D                     315 	dec	c
      000122 20 FC                  316 	jr	NZ,00103$
      000124 0E 00                  317 	ld	c, #0x00
      000126 A5                     318 	and	a, l
      000127 5F                     319 	ld	e, a
      000128 79                     320 	ld	a, c
      000129 A4                     321 	and	a, h
      00012A B3                     322 	or	a, e
      00012B D6 01                  323 	sub	a,#0x01
      00012D 3E 00                  324 	ld	a, #0x00
      00012F 17                     325 	rla
      000130 EE 01                  326 	xor	a, #0x01
      000132 5F                     327 	ld	e, a
                                    328 ;input.c:41: }
      000133 C9                     329 	ret
                                    330 ;input.c:43: uint8_t is_input_held(struct input_state* is, uint8_t button)
                                    331 ;	---------------------------------
                                    332 ; Function is_input_held
                                    333 ; ---------------------------------
      000134                        334 _is_input_held::
                                    335 ;input.c:45: return (is->held_buttons & (1 << button)) != 0x00;
      000134 F8 02                  336 	ldhl	sp,	#2
      000136 2A                     337 	ld	a, (hl+)
      000137 4F                     338 	ld	c, a
      000138 2A                     339 	ld	a, (hl+)
      000139 47                     340 	ld	b, a
      00013A 03                     341 	inc	bc
      00013B 03                     342 	inc	bc
      00013C 0A                     343 	ld	a, (bc)
      00013D 4E                     344 	ld	c, (hl)
      00013E 21 01 00               345 	ld	hl, #0x0001
      000141 0C                     346 	inc	c
      000142 18 01                  347 	jr	00104$
      000144                        348 00103$:
      000144 29                     349 	add	hl, hl
      000145                        350 00104$:
      000145 0D                     351 	dec	c
      000146 20 FC                  352 	jr	NZ,00103$
      000148 0E 00                  353 	ld	c, #0x00
      00014A A5                     354 	and	a, l
      00014B 5F                     355 	ld	e, a
      00014C 79                     356 	ld	a, c
      00014D A4                     357 	and	a, h
      00014E B3                     358 	or	a, e
      00014F D6 01                  359 	sub	a,#0x01
      000151 3E 00                  360 	ld	a, #0x00
      000153 17                     361 	rla
      000154 EE 01                  362 	xor	a, #0x01
      000156 5F                     363 	ld	e, a
                                    364 ;input.c:46: }
      000157 C9                     365 	ret
                                    366 	.area _CODE
                                    367 	.area _INITIALIZER
                                    368 	.area _CABS (ABS)
